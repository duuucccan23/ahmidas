template< typename Element, size_t L, size_t T >
Core::Field< Element, L, T >::Field()
: d_references(new size_t(1)),
  d_unifold(Base::Unifold< L, T >::instance())
  d_field(new Element[L * L * L * T / d_com.nodes()]),
  d_offsets(new size_t[4])
{
  std::fill_n(d_offsets, 4, 0);
}
