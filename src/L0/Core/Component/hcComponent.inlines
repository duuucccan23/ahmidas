namespace Core
{
  template< typename Element, size_t L, size_t T, typename Atom >
  inline hcComponent< Element, L, T, Atom >::hcComponent(Component< Element, L, T, Atom > const &parent)
    : d_parent(parent)
  {}

  template< typename Element, size_t L, size_t T, typename Atom >
  inline Component< Element, L, T, Atom > const &hcComponent< Element, L, T, Atom >::dagger() const
  {
    return d_parent;
  }

  template< typename Element, size_t L, size_t T, typename Atom >
  inline typename Component< Element, L, T, Atom >::const_iterator &hcComponent< Element, L, T, Atom >::begin() const
  {
    return d_parent.begin();
  }

  template< typename Element, size_t L, size_t T, typename Atom >
  inline typename Component< Element, L, T, Atom >::const_iterator &hcComponent< Element, L, T, Atom >::end() const
  {
    return d_parent.end();
  }

  template< typename Element, size_t L, size_t T, typename Atom >
  inline Atom const &hcComponent< Element, L, T, Atom >::parentIdx(size_t const idx) const
  {
    return d_parent[idx];
  }

  template< typename Element, size_t L, size_t T, typename Atom >
  inline size_t hcComponent< Element, L, T, Atom >::size() const
  {
    return d_parent.size();
  }
}
