namespace QCD
{
  inline reducedTensor::reducedTensor(Tensor const &A, Tensor const &B)
  {
//     static size_t count(0);
//     std::cout << "call no. ";
//     std::cout.width(7);
//     std::cout << count++ << " of reducedTensor(Tensor const &A, Tensor const &B)" <<std::endl;
//     std::cout << " A = \n" << A << std::endl;
//     std::cout << " B = \n" << A << std::endl;
    reducedTensor rr(A, Base::col_RED,   Base::col_RED);
    reducedTensor rg(A, Base::col_RED,   Base::col_GREEN);
    reducedTensor rb(A, Base::col_RED,   Base::col_BLUE);
    reducedTensor gr(A, Base::col_GREEN, Base::col_RED);
    reducedTensor gb(A, Base::col_GREEN, Base::col_BLUE);
    reducedTensor gg(A, Base::col_GREEN, Base::col_GREEN);
    reducedTensor br(A, Base::col_BLUE,  Base::col_RED);
    reducedTensor bb(A, Base::col_BLUE,  Base::col_BLUE);
    reducedTensor bg(A, Base::col_BLUE,  Base::col_GREEN);

    rr *= reducedTensor(B, Base::col_RED,   Base::col_RED);
    rg *= reducedTensor(B, Base::col_GREEN, Base::col_RED);
    rb *= reducedTensor(B, Base::col_BLUE,  Base::col_RED);
    gr *= reducedTensor(B, Base::col_RED,   Base::col_GREEN);
    gb *= reducedTensor(B, Base::col_BLUE,  Base::col_GREEN);
    gg *= reducedTensor(B, Base::col_GREEN, Base::col_GREEN);
    br *= reducedTensor(B, Base::col_RED,   Base::col_BLUE);
    bb *= reducedTensor(B, Base::col_BLUE,  Base::col_BLUE);
    bg *= reducedTensor(B, Base::col_GREEN, Base::col_BLUE);
    rr += rg;
    rr += rb;
    rr += gr;
    rr += gb;
    rr += gg;
    rr += br;
    rr += bb;
    rr += bg;
    std::copy(rr.d_data, rr.d_data + 16, d_data);
//     std::cout << " *this = \n" << *this << std::endl;    
  }
}
