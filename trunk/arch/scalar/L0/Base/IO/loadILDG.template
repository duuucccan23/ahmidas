template< typename Element, size_t L, size_t T >
Core::Field< Element, L, T > Base::IO::loadILDG(std::string const &filename)
{
  Lime::Reader reader(filename);
  reader.retrieveRecord(reader.findRecord("ildg-binary-data"));

  //Poor man's parser for reading the precision should be inserted here, beyond we now assume double as input
  Core::Field< Element, L, T > result;
  Element *dataPtr = &(result.fastMemoryIndex(0));
  reader.read(dataPtr, L * L * L * T);
  if (!bigEndian())
    swapEndian(dataPtr, dataPtr + L * L * L * T, sizeof(double));
  return result;
}
