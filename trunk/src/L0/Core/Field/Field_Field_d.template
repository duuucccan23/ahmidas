namespace Core
{
  template< typename Element, size_t L, size_t T >
  Field< Element, L, T >::Field(hcField< Element, L, T > const &other)
  : d_grid(other.d_parent.d_grid), d_bufferSize(other.d_parent.d_bufferSize), d_buffer(new Element[d_bufferSize]),
    d_field(new Element[d_grid.localVolume()])  
  {
    std::copy(other.d_parent.d_offsets, other.d_parent.d_offsets + 4, d_offsets);
    std::copy(other.d_parent.d_surfaces, other.d_parent.d_surfaces + 4, d_surfaces);
    Element *hisIter  = other.d_field;
    for (Element *myIter = d_field; myIter != d_field + d_grid.localVolume(); ++myIter, ++hisIter)
      *myIter = hisIter->dagger();    
  }
}
