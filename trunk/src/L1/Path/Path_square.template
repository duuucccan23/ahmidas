template< size_t L, size_t T >
Core::Field< SU3::Matrix, L, T > Path::square(Core::Field< QCD::Gauge, L, T > &field, Base::SpaceTimeIndex via, Base::Direction dirVia, Base::SpaceTimeIndex to, Base::Direction dirTo)
{ //Note that we shift the result field around, it will be smaller
  if (via == to)
    return Core::Field< SU3::Matrix, L, T > (SU3::Matrix::identity());
  Core::Field< SU3::Matrix, L, T > result(Path::step(field, via, dirVia)); //step1
  Path::step(result, field, to, dirTo); //step2
  Path::step(result, field, via, (dirVia == Base::dir_UP ? Base::dir_DOWN : Base::dir_UP)); //step3
  Path::step(result, field, to, (dirTo == Base::dir_UP ? Base::dir_DOWN : Base::dir_UP)); //back to starting point
  return result;
}
