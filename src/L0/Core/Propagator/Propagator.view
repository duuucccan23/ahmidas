
template< size_t Lview, size_t Tview >
class view
{
  friend class Propagator;
  
  Propagator < Lview, Tview > *d_target;
  
  Core::Field< std::complex< double >, Lview, Tview > *const *d_components;

  public:
    view< Lview, Tview >(Propagator< Lview, Tview > &target, Base::DiracIndex const idx, const size_t DiracID);
    view< Lview, Tview >(Propagator< Lview, Tview > &target, Base::ColourIndex const idx, const size_t ColourID);
                                              
    view< Lview, Tview >(view< Lview, Tview > &target, Base::DiracIndex const idx, const size_t DiracID);
    view< Lview, Tview >(view< Lview, Tview > &target, Base::ColourIndex const idx, const size_t ColourID);

};
