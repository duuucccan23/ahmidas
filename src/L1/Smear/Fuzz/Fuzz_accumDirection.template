namespace Smear
{
  template< size_t L, size_t T >
  void Fuzz::accumDirection(Core::Field< QCD::Gauge, L, T > &field, Core::SpaceTimeIndex idx) const
  {
    Core::Field< QCD::Gauge, L, T > shifter(field);
    Core::Component< QCD::Gauge, L, T, SU3::Matrix > shiftComponent(shifter, idx);
    Core::Component< QCD::Gauge, L, T, SU3::Matrix > fieldComponent(field, idx);
    for (size_t ctr = 1; ctr < d_length; ++ctr)
    {
      shifter.shift(idx, Core::dir_UP);
      fieldComponent.rightMultiply(shiftComponent);
    }
  }
}
