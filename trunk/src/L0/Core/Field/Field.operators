Element &operator[](size_t const idx);

Element const &operator[](size_t const idx) const;

template< typename Scalar >
Field< Element, L, T > &leftMultiply(Scalar const &other);

template< typename Scalar >
Field< Element, L, T > &leftMultiply(Field< Scalar, L, T > const &other);

template< typename Scalar >
Field< Element, L, T > &leftMultiply(hcField< Scalar, L, T > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &leftMultiply(Component< Scalar, L, T, Atom > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &leftMultiply(hcComponent< Scalar, L, T, Atom > const &other);

template< typename Scalar >
Field< Element, L, T > &rightMultiply(Scalar const &other);

template< typename Scalar >
Field< Element, L, T > &rightMultiply(Field< Scalar, L, T > const &other);

template< typename Scalar >
Field< Element, L, T > &rightMultiply(hcField< Scalar, L, T > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &rightMultiply(Component< Scalar, L, T, Atom > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &rightMultiply(hcComponent< Scalar, L, T, Atom > const &other);

template< typename Scalar >
Field< Element, L, T > &operator+=(Scalar const &other);

template< typename Scalar >
Field< Element, L, T > &operator+=(Field< Scalar, L, T > const &other);

template< typename Scalar >
Field< Element, L, T > &operator+=(hcField< Scalar, L, T > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &operator+=(Component< Scalar, L, T, Atom > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &operator+=(hcComponent< Scalar, L, T, Atom > const &other);

template< typename Scalar >
Field< Element, L, T > &operator-=(Scalar const &other);

template< typename Scalar >
Field< Element, L, T > &operator-=(Field< Scalar, L, T > const &other);

template< typename Scalar >
Field< Element, L, T > &operator-=(hcField< Scalar, L, T > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &operator-=(Component< Scalar, L, T, Atom > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &operator-=(hcComponent< Scalar, L, T, Atom > const &other);

template< typename Scalar >
Field< Element, L, T > &operator*=(Scalar const &other);

template< typename Scalar >
Field< Element, L, T > &operator*=(Field< Scalar, L, T > const &other);

template< typename Scalar >
Field< Element, L, T > &operator*=(hcField< Scalar, L, T > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &operator*=(Component< Scalar, L, T, Atom > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &operator*=(hcComponent< Scalar, L, T, Atom > const &other);

template< typename Scalar >
Field< Element, L, T > &operator/=(Scalar const &other);

template< typename Scalar >
Field< Element, L, T > &operator/=(Field< Scalar, L, T > const &other);

template< typename Scalar >
Field< Element, L, T > &operator/=(hcField< Scalar, L, T > const &other);

template< typename Scalar, typename Atom>
Field< Element, L, T > &operator/=(Component< Scalar, L, T, Atom > const &other);

template< typename Scalar, typename Atom >
Field< Element, L, T > &operator/=(hcComponent< Scalar, L, T, Atom > const &other);
