namespace Smear
{
  template< size_t L, size_t T >
  void Jacobi::smear(Core::Field< QCD::Spinor, L, T > *spinorField, Core::Field< QCD::Gauge, L, T > &gaugeField) const
  {
    Core::Field< QCD::Spinor, L, T > neighbourSpinor(*spinorField);
    neighbourSpinor *= d_kappa;

    (*spinorField) *= d_weight;

    // Sum the field with the parallelly transported neighbours.
    (*spinorField) += Transport::step(neighbourSpinor, gaugeField, Base::idx_X, Base::dir_DOWN);
    (*spinorField) += Transport::step(neighbourSpinor, gaugeField, Base::idx_Y, Base::dir_DOWN);
    (*spinorField) += Transport::step(neighbourSpinor, gaugeField, Base::idx_Z, Base::dir_DOWN);

    (*spinorField) += Transport::step(neighbourSpinor, gaugeField, Base::idx_X, Base::dir_UP);
    (*spinorField) += Transport::step(neighbourSpinor, gaugeField, Base::idx_Y, Base::dir_UP);
    (*spinorField) += Transport::step(neighbourSpinor, gaugeField, Base::idx_Z, Base::dir_UP);
  }
}
