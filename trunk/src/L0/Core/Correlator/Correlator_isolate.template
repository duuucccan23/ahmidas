void Core::Correlator::isolate()
{
  if (*d_references == 1)
    return;

  assert(*d_references > 1);

  *d_references -= 1;
  d_references   = new size_t(1);

  d_weave = new Base::Weave(L, T);

  QCD::reducedTensor *sumTimeslice = new QCD::reducedTensor(T);
  std::copy(d_sumTimeslice, d_sumTimeslice + T, sumTimeslice);
  d_sumTimeslice = sumTimeslice;
  
  QCD::reducedTensor *sumTimeslice_global = new QCD::reducedTensor(T);
  std::copy(d_sumTimeslice_global, d_sumTimeslice_global + T, sumTimeslice_global);
  d_sumTimeslice_global = sumTimeslice_global;

  Core::Field< QCD::reducedTensor > *data = new Core::Field < QCD::reducedTensor >(L, T);
  Core::Field< QCD::reducedTensor >::iterator itOld = d_data->begin();
  Core::Field< QCD::reducedTensor >::iterator itNew = data->begin();
  while(itOld != d_data->end())
  {
    *itNew = *itOld;
    ++itOld;
    ++itNew;
  }
  d_data = data;
}
