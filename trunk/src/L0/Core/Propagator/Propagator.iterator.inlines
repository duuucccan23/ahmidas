namespace Core
{

  /* private constructor */

  inline Propagator::iterator::iterator(Core::Propagator &target,  size_t idx)
    : Core::Field< QCD::Tensor >::iterator(*(target.d_components), idx), d_target(target)
  {}


  /* copy constructor */

  inline Propagator::iterator::iterator(Propagator::iterator const &other)
    : Core::Field< QCD::Tensor >::iterator(*(other.d_target.d_components), other.d_idx), d_target(other.d_target)
  {}



//   inline bool Propagator::iterator::operator==(Propagator::iterator const &other) const
//   {
//     return (d_target.d_components)[d_idx] == (other.d_target.d_components)[other.d_idx];
//   }
// 
// 
// 
//   inline bool Propagator::iterator::operator!=(Propagator::iterator const &other) const
//   {
//     return (d_target.d_components)[d_idx] != (other.d_target.d_components)[other.d_idx];
//   }


  /* access field components */



  inline QCD::Tensor &Propagator::iterator::operator*()
  {
    return *(*this);
  }



  inline QCD::Tensor *Propagator::iterator::operator->()
  {
    return &(*(*this));
  }

  
  /* access field components  - "const" version */

  inline QCD::Tensor const &Propagator::iterator::operator*() const
  {
    return *(*this);
  }



  inline QCD::Tensor const *Propagator::iterator::operator->() const
  {
    return &(*(*this));
  }


  /* increment & decrement (prefix and postfix versions)*/

  inline Propagator::iterator &Propagator::iterator::operator++()
  {
    return ++(*this);
  }

  inline Propagator::iterator Propagator::iterator::operator++(int)
  {
    return (*this)++;
  }


  inline Propagator::iterator &Propagator::iterator::operator--()
  {
    return --(*this);
  }
  
  inline Propagator::iterator Propagator::iterator::operator--(int)
  {
    return (*this)--;
  }

}
